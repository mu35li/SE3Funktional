#lang racket
;Aufgabe 1.1
(define (degrees->radians deg)
(* (/ (* 2 pi) 360) deg))

(define (radians->degrees rad)
  (* (/ 360 (* 2 pi)) rad))

(degrees->radians 180) ;ergibt pi
(radians->degrees pi)  ;ergibt 180

;Aufgabe 1.2
(define (my-acos value)
  (atan (/ (sqrt (- 1 (* value value))) value))
  )

(radians->degrees (my-acos 0.5)) ;arccos(0.5) = 60grad

;Aufgabe 1.3
(define (nm->km nm)
  (* nm 1.852)
  )

(nm->km 5)

;Aufgabe 2

(define (distanzAB breiteA laengeA breiteB laengeB)
  (nm->km
   (* 60 
      (radians->degrees 
       (my-acos
        (+ 
         (* 
          (sin (degrees->radians breiteA)) 
          (sin (degrees->radians breiteB))
         ) 
         (* 
          (cos (degrees->radians breiteA)) 
          (cos(degrees->radians breiteB)) 
          (cos (degrees->radians(- laengeB laengeA)))
         )
        )
       )
      )
     )
   )
  )
(distanzAB 59.93 10.75 22.20 114.10) ; -> 8589.41222
(distanzAB 37.75 -122.45 21.32 -157.83); -> 3844.68805
(distanzAB -27.10 -109.40 -12.10 -77.05); -> 3757.62222

;Aufgabe 2.3

(define (compas grad)  	 ; Grad -> Himmelsrichtung
  (cond [(or (= grad  0) (= grad 360)) (print "N")]
        [(< grad 45) (print "NNE")]
        [(= grad 45) (print "NE")]
        [(< grad 90) (print "ENE")]
        [(= grad 90) (print "E")]
        [(< grad 135) (print "ESE")]
        [(= grad 135) (print "SE")]
        [(< grad 180) (print "SSE")]
        [(= grad 180) (print "S")]
        [(< grad 225) (print "SSW")]
        [(= grad 225) (print "SW")]
        [(< grad 270) (print "WSW")]
        [(= grad 270) (print "W")]
        [(< grad 315) (print "WNW")]
        [(= grad 315) (print "NW")]
        [(< grad 360) (print "NNW")]
        [else (print "-")]))

;lululu